which-inv-info: "{!ENV: MERRITT_INV_INFO !DEFAULT: inv-info}"
  
inv-info:
  storageBase: "{!SSM: store/config/baseURI}"
  state:
    id: inv
    name: UC3
    description: "UC3 inventory micro-service"
    baseURI: "{!SSM: inventory/config/baseURI}"
  
  zooserver:
    queueService: "{!SSM: inventory/zoo/queueService}"
    queueName: "{!SSM: inventory/zoo/queueName}"
    lockName: "{!SSM: inventory/zoo/lockName !DEFAULT: /mrt.lock}"

  zooclient:
    zooPollMilli: "{!SSM: inventory/config/zoo/pollMilli !DEFAULT: 60000}"
    zooThreadCount: "{!SSM: inventory/config/zoo/threadCount !DEFAULT: 5}"

  fileLogger:
    messageMaximumLevel: "{!SSM: inventory/config/log/messageMaximumLevel !DEFAULT: 5}"
    messageMaximumError: "{!SSM: inventory/config/log/messageMaximumError !DEFAULT: 10}"
    path: "{!ENV: LOG_INV !DEFAULT: /dpr2/mrtHomes/inv}"
    name: inv
    qualifier: yyMMdd
    trace: 5

  db:
    user: "{!SSM: inv/readwrite/db-user}"
    password: "{!SSM: inv/readwrite/db-password}"
    host: "{!SSM: inv/db-host}"
    name: "{!SSM: inv/db-name}"
    encoding: "{!SSM: inv/db-encoding !DEFAULT: characterEncoding=UTF-8&characterSetResults=UTF-8}"
  
inv-info-docker: &docker
  storageBase: http://store:8080/store
  state:
    id: inv
    name: UC3
    description: "UC3 inventory micro-service"
    baseURI: http://localhost:8082/inventory
  
  zooserver:
    queueService: zoo:2181
    queueName: /mrt.inventory.full
    lockName: /mrt.lock

  zooclient:
    zooPollMilli: 60000
    zooThreadCount: 5

  fileLogger:
    messageMaximumLevel: 5
    messageMaximumError: 10
    path: /tdr/tmpdir
    name: inv
    qualifier: yyMMdd
    trace: 5

  db:
    adapter: mysql2
    host: db-container
    name: db-name
    user: user
    password: password
    #encoding: "characterEncoding=UTF-8&characterSetResults=UTF-8&enabledTLSProtocols=TLSv1.2"   # schema won't load if it's utf8mb4
    encoding: "characterEncoding=UTF-8&characterSetResults=UTF-8&useSSL=false&serverTimezone=UTC"   # schema won't load if it's utf8mb4
  
inv-info-docker-dev: 
  <<: *docker

  db:
    user: "{!SSM: inv/readwrite/db-user}"
    password: "{!SSM: inv/readwrite/db-password}"
    host: "{!SSM: inv/db-host}"
    name: "{!SSM: inv/db-name}"
    encoding: "{!SSM: inv/db-encoding !DEFAULT: characterEncoding=UTF-8&characterSetResults=UTF-8}"
